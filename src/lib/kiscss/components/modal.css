/*
some ideas borrowed from: 
  - https://begin.com/blog/posts/2022-10-18-an-accessible-modal-without-javascript
  - TODO: use :has selector and try to simplify
  - advanced use cases such as detecting enter and escape keys 
    require JS; at which point there is no compelling reason to
    avoid the browser provided `dialog` element... if there is no JS
    then the idea of having modal simply doesn't make sense as a UI
    element. Instead the damn thing should just be a form that is
    visible from the get go.... hmmm...
*/
.modal {
  text-align: center;

  /* Control element to show/hide without JavaScript */
  & > input {
    display: none;

    & ~ * {
      /* Not visible by default */
      opacity: 0;

      /* Not meant for interaction by default */
      max-height: 0;
      overflow: hidden;
    }
  }

  & .overlay {
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    position: fixed;
    margin: 0;
    border-radius: 0;
    background-color: var(--dim);
    transition: var(--transition);
    /* make sure z-index is above the rest, especially `nav` element */
    z-index: 300;

    &::before,
    &::after {
      display: none;
    }

    /* All elements that follow the overlay (the modals)... */
    & ~ * {
      /* Position the contents in the middle and top of everything on the screen */
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translateX(-50%) translateY(-50%);
      z-index: 1000000;

      /* Closing effect */
      transition: var(--transition);
    }
  }

  /* Show modal when checked */
  & > input:checked {
    & ~ * {
      display: block;
      opacity: 1;
      max-height: 10000px;
      /* Opening effect */
      transition: var(--transition);
    }

    /* Grab everything in modal that is after the overlay after the input */
    & :is(~ .overlay ~ *) {
      max-height: 90%;
      overflow: auto;
      transform: translateX(-50%) translateY(-50%) scale(1, 1);
    }
  }
}

/* 
sadly we cannot use custom property for evaluating @custom-media, so
we have to hard code the '--breakpoint'
see https://bholmes.dev/blog/alternative-to-css-variable-media-queries/
see https://parceljs.org/languages/css/#custom-media-queries
*/
@custom-media --modalBreakAt (max-width: 768px);

@media (--modalBreakAt) {
  .modal .overlay ~ * {
    min-width: 90%;
  }
}
